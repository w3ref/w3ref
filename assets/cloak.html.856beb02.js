import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o as t,c as a,g as o}from"./app.674943b1.js";const n={},s=o(`<h1 id="x-cloak" tabindex="-1"><a class="header-anchor" href="#x-cloak" aria-hidden="true">#</a> x-cloak</h1><p>Sometimes, when you&#39;re using AlpineJS for a part of your template, there is a &quot;blip&quot; where you might see your uninitialized template after the page loads, but before Alpine loads.</p><p><code>x-cloak</code> addresses this scenario by hiding the element it&#39;s attached to until Alpine is fully loaded on the page.</p><p>For <code>x-cloak</code> to work however, you must add the following CSS to the page.</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">[x-cloak]</span> <span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> none <span class="token important">!important</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Now, the following example will hide the <code>&lt;span&gt;</code> tag until Alpine has set its text content to the <code>message</code> property.</p><div class="language-alpine ext-alpine line-numbers-mode"><pre class="language-alpine"><code>&lt;span x-cloak x-text=&quot;message&quot;&gt;&lt;/span&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>When Alpine loads on the page, it removes all <code>x-cloak</code> property from the element, which also removes the <code>display: none;</code> applied by CSS, therefore showing the element.</p><p>If you&#39;d like to achieve this same behavior, but avoid having to include a global style, you can use the following cool, but admittedly odd trick:</p><div class="language-alpine ext-alpine line-numbers-mode"><pre class="language-alpine"><code>&lt;template x-if=&quot;true&quot;&gt;
    &lt;span x-text=&quot;message&quot;&gt;&lt;/span&gt;
&lt;/template&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This will achieve the same goal as <code>x-cloak</code> by just leveraging the way <code>x-if</code> works.</p><p>Because <code>&lt;template&gt;</code> elements are &quot;hidden&quot; in browsers by default, you won&#39;t see the <code>&lt;span&gt;</code> until Alpine has had a chance to render the <code>x-if=&quot;true&quot;</code> and show it.</p><p>Again, this solution is not for everyone, but it&#39;s worth mentioning for special cases.</p>`,13),l=[s];function i(c,d){return t(),a("div",null,l)}var u=e(n,[["render",i],["__file","cloak.html.vue"]]);export{u as default};
