import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o as t,c as o,g as a}from"./app.674943b1.js";const n={},l=a(`<h1 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> $watch</h1><p>You can &quot;watch&quot; a component property using the <code>$watch</code> magic method. For example:</p><div class="language-alpine ext-alpine line-numbers-mode"><pre class="language-alpine"><code>&lt;div x-data=&quot;{ open: false }&quot; x-init=&quot;$watch(&#39;open&#39;, value =&gt; console.log(value))&quot;&gt;
    &lt;button @click=&quot;open = ! open&quot;&gt;Toggle Open&lt;/button&gt;
&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the above example, when the button is pressed and <code>open</code> is changed, the provided callback will fire and <code>console.log</code> the new value:</p><p>You can watch deeply nested properties using &quot;dot&quot; notation</p><div class="language-alpine ext-alpine line-numbers-mode"><pre class="language-alpine"><code>&lt;div x-data=&quot;{ foo: { bar: &#39;baz&#39; }}&quot; x-init=&quot;$watch(&#39;foo.bar&#39;, value =&gt; console.log(value))&quot;&gt;
    &lt;button @click=&quot;foo.bar = &#39;bob&#39;&quot;&gt;Toggle Open&lt;/button&gt;
&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When the <code>&lt;button&gt;</code> is pressed, <code>foo.bar</code> will be set to &quot;bob&quot;, and &quot;bob&quot; will be logged to the console.</p><p><a name="getting-the-old-value"></a></p><h3 id="getting-the-old-value" tabindex="-1"><a class="header-anchor" href="#getting-the-old-value" aria-hidden="true">#</a> Getting the &quot;old&quot; value</h3><p><code>$watch</code> keeps track of the previous value of the property being watched, You can access it using the optional second argument to the callback like so:</p><div class="language-alpine ext-alpine line-numbers-mode"><pre class="language-alpine"><code>&lt;div x-data=&quot;{ open: false }&quot; x-init=&quot;$watch(&#39;open&#39;, (value, oldValue) =&gt; console.log(value, oldValue))&quot;&gt;
    &lt;button @click=&quot;open = ! open&quot;&gt;Toggle Open&lt;/button&gt;
&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="deep-watching"></a></p><h3 id="deep-watching" tabindex="-1"><a class="header-anchor" href="#deep-watching" aria-hidden="true">#</a> Deep watching</h3><p><code>$watch</code> will automatically watches from changes at any level but you should keep in mind that, when a change is detected, the watcher will return the value of the observed property, not the value of the subproperty that has changed.</p><div class="language-alpine ext-alpine line-numbers-mode"><pre class="language-alpine"><code>&lt;div x-data=&quot;{ foo: { bar: &#39;baz&#39; }}&quot; x-init=&quot;$watch(&#39;foo&#39;, (value, oldValue) =&gt; console.log(value, oldValue))&quot;&gt;
    &lt;button @click=&quot;foo.bar = &#39;bob&#39;&quot;&gt;Update&lt;/button&gt;
&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When the <code>&lt;button&gt;</code> is pressed, <code>foo.bar</code> will be set to &quot;bob&quot;, and &quot;{bar: &#39;bob&#39;} {bar: &#39;baz&#39;}&quot; will be logged to the console (new and old value).</p><blockquote><p>\u26A0\uFE0F Changing a property of a &quot;watched&quot; object as a side effect of the <code>$watch</code> callback will generate an infinite loop and eventually error.</p></blockquote><div class="language-alpine ext-alpine line-numbers-mode"><pre class="language-alpine"><code>&lt;!-- \u{1F6AB} Infinite loop --&gt;
&lt;div x-data=&quot;{ foo: { bar: &#39;baz&#39;, bob: &#39;lob&#39; }}&quot; x-init=&quot;$watch(&#39;foo&#39;, value =&gt; foo.bob = foo.bar)&quot;&gt;
    &lt;button @click=&quot;foo.bar = &#39;bob&#39;&quot;&gt;Update&lt;/button&gt;
&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),i=[l];function d(c,u){return t(),o("div",null,i)}var p=e(n,[["render",d],["__file","watch.html.vue"]]);export{p as default};
